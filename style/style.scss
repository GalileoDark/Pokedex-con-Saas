/* Un Map con todos los datos de los pokemon, en el que la clave es el numero en la pokedex */
@use 'datos';
/* Un Map en el que el tipo del pokemon es la clave, y el valor es el un color que caracteriza el tipo */
@use 'tipos';

@use 'fuente' as body;
/* Animación para que el logo de vueltas */
@keyframes rotateLogo {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
/* el logo puesto en la cabecera. */
.logo{
    content: url('../img/logo.png');
    height: 55px;
    width: 55px;
    transition: transform 1s ease-in-out; 

    &:hover {
      animation: rotateLogo 1s infinite;
    }
}
/* El body con el background por defecto (modo claro) */
body {
    background-image: url("../img/background0.png");
}
/* boton de cambio de modo */
#modo-btn{
    height: 50px;
    width: 50px;
    border-radius: 50px;
    background-color: transparent;
    border-color: rgb(145, 2, 2);
    border: none;
}
.boton{
    height: 100%;
    width: 100%;
}
/* La cabecera con Boostrap */
.navbar {
    background-color: rgb(255, 51, 51) !important;
}
/* La letra del Boostrap */
.navbar .nav-link{
    font-family: Arial, serif;
    font-size: larger;
    font-weight: 900;
    color: white !important;
}

/* Clase para cambiar el fondo con JavaScript */
.modo-nocturno {
    background-image: url("../img/background1.png");
}
/* Las media Query */

@media screen {
    /* Para PC (1025px en adelante) */
@media (min-width: 1025px) {
    /* El contenedor del index*/
    .contenedor{
        display: grid;
        grid-template-columns: repeat(3, 1fr); /* 3 columnas automáticas */
        gap: 10px; /* Espaciado entre divs */
        margin: 5%
    }
    /* El Grid de la pagina de la descripción */
    .contenedorDescripcion{
        background-image: url('../img/background1.png');
        border-radius: 10px;
        box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.3);
        padding-left: 2%;
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        grid-template-rows: auto auto auto; /* Dos filas ajustables */
        gap: 10px; /* Espaciado entre divs */
        margin : 10%;
        grid-template-areas:
            "numeroPokedex nombre nombre nombre"
            "imagen imagen descripcion descripcion"
            "tipos tipos descripcion descripcion";
        text-align: center ;
    }
    /* El grid de los tipos */
    .contenedorTipo{
        padding-top: 1%;
        display: grid;
        grid-template-columns: repeat(3, 1fr); /* 3 columnas automáticas */
        gap: 10px; /* Espaciado entre divs */
        margin: 2%;
    }
}

/* Para Tabletas (768px a 1024px) */
@media (min-width: 768px) and (max-width: 1024px) {
    /* El contenedor del index*/
    .contenedor{
        display: grid;
        grid-template-columns: repeat(2, 1fr); /* 2 columnas automáticas */
        gap: 10px; /* Espaciado entre divs */
        margin: 5%
    }
    /* El Grid de la pagina de la descripción */
    .contenedorDescripcion{
        background-image: url('../img/background1.png');
        border-radius: 10px;
        box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.3);
        padding: 2%;
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-template-rows: auto auto auto auto; /* 4 filas ajustables */
        gap: 10px; /* Espaciado entre divs */
        margin : 10%;
        grid-template-areas:
            "numeroPokedex nombre"
            "imagen imagen"
            "descripcion descripcion"
            "tipos tipos";
        text-align: center ;
    }
    /* El grid de los tipos */
    .contenedorTipo{
        padding: 1%;
        display: grid;
        grid-template-columns: repeat(2, 1fr); /* 2 columnas automáticas */
        gap: 10px; /* Espaciado entre divs */
        margin: 2%;
    }
}

/* Para Teléfonos (hasta 767px) */
@media (max-width: 767px) {
    /* El contenedor del index*/
    .contenedor{
        display: grid;
        grid-template-columns: repeat(1, 1fr); /* 2 columnas automáticas */
        gap: 10px; /* Espaciado entre divs */
        margin: 5%
    }
    /* El Grid de la pagina de la descripción */
    .contenedorDescripcion{
        background-image: url('../img/background1.png');
        border-radius: 10px;
        box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.3);
        padding: 2%;
        display: grid;
        grid-template-columns: repeat(1, 1fr);
        grid-template-rows: auto auto auto auto auto; /* 5 filas ajustables */
        gap: 10px; /* Espaciado entre divs */
        margin : 10%;
        grid-template-areas:
            "numeroPokedex "
            "nombre"
            "imagen"
            "descripcion"
            "tipos";
        text-align: center ;
    }
    /* El grid de los tipos */
    .contenedorTipo{
        padding: 2%;
        display: grid;
        grid-template-columns: repeat(1, 1fr); /* 2 columnas automáticas */
        gap: 10px; /* Espaciado entre divs */
        margin: 2%;
    }
}

}



table{
    height: 100%;
    width: 100%;
}
  
/* Es un bucle que recorre todos los registros de datos, en el que el indice coincidira con el indice que hay en los archivos php 
Este bucle funciona para todas las paginas, pero, dependiendo de en cual estes, hara una cosa u otra.
Pero en general, este bucle lo que hace es introducir las imagenes, el texto, el nombre, el background y todo lo que caracteriza al pokemon
*/
@for $i from 1 through 251 {
    .item#{$i}{
        @if #{map-get(map-get(datos.$datos, $i), tipo2)} == ""{
        background-color:  map-get(tipos.$tipos, #{map-get(map-get(datos.$datos, $i), tipo1)});
        } @else{
            background: linear-gradient(to right, map-get(tipos.$tipos, #{map-get(map-get(datos.$datos, $i), tipo1)}) 0%,
            map-get(tipos.$tipos, #{map-get(map-get(datos.$datos, $i), tipo1)}) 40%,
            map-get(tipos.$tipos, #{map-get(map-get(datos.$datos, $i), tipo2)}) 60%,
            map-get(tipos.$tipos, #{map-get(map-get(datos.$datos, $i), tipo2)}) 100%);
        }
        text-align: center;
        border: 1px solid #000;
        border-radius: 10px;
        box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.3);
    }
    .item#{$i}:hover{
        will-change: transform; // Optimización para navegadores
        transition: transform 0.4s cubic-bezier(0.25, 1, 0.5, 1); 
    
        &:hover {
            transform: scale(1.1);
        }
    }
    .imagen#{$i}::after {
        content: url('../img/#{$i}.png');
        height: 215px;
        width: 215px;
    }
    .nombre#{$i}::after {
        content: map-get(map-get(datos.$datos, $i), nombre);
        @if #{map-get(map-get(datos.$datos, $i), tipo1)} == "electrico" or #{map-get(map-get(datos.$datos, $i), tipo2)} == "electrico" {
            color: black;
        }@else if #{map-get(map-get(datos.$datos, $i), tipo1)} == "volador" or #{map-get(map-get(datos.$datos, $i), tipo2)} == "volador" {
            color: black;
        }
        @else if #{map-get(map-get(datos.$datos, $i), tipo1)} == "tierra" or #{map-get(map-get(datos.$datos, $i), tipo2)} == "tierra" {
            color: black;
        }
        @else if #{map-get(map-get(datos.$datos, $i), tipo1)} == "normal" or #{map-get(map-get(datos.$datos, $i), tipo2)} == "normal" {
            color: black;
        }
        @else if #{map-get(map-get(datos.$datos, $i), tipo1)} == "hada" or #{map-get(map-get(datos.$datos, $i), tipo2)} == "hada" {
            color: black;
        }@else if #{map-get(map-get(datos.$datos, $i), tipo1)} == "bicho" or #{map-get(map-get(datos.$datos, $i), tipo2)} == "bicho" {
            color:  black;
        }
        @else if #{map-get(map-get(datos.$datos, $i), tipo1)} == "hielo" or #{map-get(map-get(datos.$datos, $i), tipo2)} == "hielo" {
            color: black;
        }
        @else{
            color: black;
        }
        font-weight: bolder;
        width: 100%;
        font-family: "Roboto", serif;
        font-optical-sizing: auto;
        font-style: normal;
        font-variation-settings:"wdth" 100;
        justify-content: center;
    }

    .tipo1#{$i}::after{
        content:  url('../tipo/#{map-get(map-get(datos.$datos, $i), tipo1)}.png');
        object-fit: cover;
    }
    .tipo2#{$i}::after{
        content: url('../tipo/#{map-get(map-get(datos.$datos, $i), tipo2)}.png');
    }
    .descripcion#{$i}::after{
        content: map-get(map-get(datos.$datos, $i), descripcion);
        font-family: Arial, serif;
        font-size: larger;
        font-weight: 900;
        color: white;
        justify-content: center;
        grid-area: descripcion;
    }
        /* Aqui las cosas de la descripción del pokemon */
    .contenedorDescripcion{
        border: 1px solid black;
    }
    .nombre#{$i}Descripcion::after{
        content: map-get(map-get(datos.$datos, $i), nombre);
        font-weight: bolder;
        width: 100%;
        font-family: "Roboto", serif;
        font-optical-sizing: auto;
        font-style: normal;
        font-variation-settings:"wdth" 100;
        justify-content: center;
    }
    .imagen#{$i}Descripcion::after{
            content: url('../img/#{$i}.png');
            height: 215px;
            width: 215px;
    }
    .numeroPokedex{
        font-family: Arial, serif;
        font-size: larger;
        font-weight: 900;
        color: white;
        grid-area: numeroPokedex;
        justify-content: center;
    }
    .nombre{
        grid-area: nombre;
        font-family: Arial, serif;
        font-size: larger;
        font-weight: 900;
        color: white;
        justify-content: center;
    }
    .item{
        grid-area: imagen;
        justify-content: center;
        border-radius: 10px;
        border: 1px solid black;
        box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.3);

    }
    .descripcion{
        grid-area: descripcion;
    }
    .tipos{
        grid-area: tipos;
        justify-content: center;

    }
        
}
